C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2022 15:52:45 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: D:\Keil-C51\C51\BIN\C51.EXE Main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(D:\keil 5\C51\INC\Atmel) DEBUG O
                    -BJECTEXTEND

line level    source

   1          /******************************************************************
   2             本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3                                  
   4                  欢迎访问我的USB专区：http://group.ednchina.com/93/
   5                  欢迎访问我的blog：   http://www.ednchina.com/blog/computer00
   6                                       http://computer00.21ic.org
   7          
   8                  感谢PCB赞助商――电子园： http://bbs.cepark.com/
   9          
  10          main.c file
  11          
  12          作者：电脑圈圈
  13          建立日期: 2008.06.27
  14          修改日期: 2008.07.10
  15          版本：V1.1
  16          版权所有，盗版必究。
  17          Copyright(C) 电脑圈圈 2008-2018
  18          All rights reserved            
  19          *******************************************************************/
  20          
  21          #include <AT89X52.H>  //头文件
  22          #include "Key.h"
  23          #include "Led.h"
  24          #include "UART.h"
  25          #include "pdiusbd12.h"
  26          #include "UsbCore.h"
  27          #include "config.h"
  28          
  29          code uint8 HeadTable[][74] = {
  30          "********************************************************************\r\n",
  31          "******             《圈圈教你玩USB》之 USB鼠标                ******\r\n",
  32          "******                      AT89S52 CPU                       ******\r\n",
  33          "******               建立日期：",__DATE__,"                   ******\r\n",
  34          "******               建立时间：",__TIME__,"                   ******\r\n",
  35          "******                    作者：电脑圈圈                      ******\r\n",
  36          "******                    欢迎访问作者的                      ******\r\n",
  37          "******           USB专区：http://group.ednchina.com/93/       ******\r\n",
  38          "******      BLOG1：http://www.ednchina.com/blog/computer00    ******\r\n",
  39          "******                BLOG2：http://computer00.21ic.org       ******\r\n",
  40          "******                  请按K1-K8分别进行测试                 ******\r\n",
  41          "******    K1:光标左移  K2:光标右移  K3:光标上移 K4:光标下移   ******\r\n",
  42          "******    K5:滚轮下滚  K6:滚轮上滚  K7:鼠标左键 K8:鼠标右键   ******\r\n",
  43          "********************************************************************\r\n",
  44          };
  45          
  46          /********************************************************************
  47          函数功能：根据按键情况构造报告报文并返回的函数。
  48          入口参数：无。
  49          返    回：无。
  50          备    注：无。
  51          ********************************************************************/
  52          void SendReport(void)
  53          {
  54   1          //需要返回的4字节报告的缓冲
C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2022 15:52:45 PAGE 2   

  55   1          //Buf[0]的 D0 就是左键，D1 就是右键，D2 就是中键（这里没有）
  56   1          //Buf[1]为 X 轴，Buf[2]为 Y 轴，Buf[3]为 滚轮
  57   1          uint8 Buf[4] = {0, 0, 0, 0};
  58   1      
  59   1          //我们不需要KEY1~KEY6按键改变的信息，所以先将它们清0
  60   1          KeyUp &= ~(KEY1|KEY2|KEY3|KEY4|KEY5|KEY6);
  61   1          KeyDown &= ~(KEY1|KEY2|KEY3|KEY4|KEY5|KEY6);
  62   1              
  63   1          //如果有按键按住，并且不是 KEY7, KEY8（左, 右键） (KeyPress & (~(KEY7|KEY8)))
  64   1          //或者 KEY7, KEY8 任何一个键有变动的话，则需要返回报告 KeyUp || KeyDown
  65   1          if((KeyPress & (~(KEY7|KEY8))) || KeyUp || KeyDown)
  66   1          {
  67   2              if(KeyPress & KEY1) //如果KEY1按住，则光标需要左移，即X轴为负值。
  68   2              {
  69   3                  Buf[1]=-1;  //这里一次往左移动一个单位。
  70   3              }
  71   2              if(KeyPress & KEY2) //如果KEY2按住，则光标需要右移，即X轴为正值。
  72   2              {
  73   3                  Buf[1]=1;   //这里一次往右移动一个单位。
  74   3              }
  75   2              if(KeyPress & KEY3) //如果KEY3按住，则光标需要上移，即Y轴为负值。
  76   2              {
  77   3                  Buf[2]=-1;   //这里一次往上移动一个单位。
  78   3              }
  79   2              if(KeyPress & KEY4)  //如果KEY4按住，则光标需要下移，即Y轴为正值。
  80   2              {
  81   3                  Buf[2]=1;  //这里一次往下移动一个单位。
  82   3              }
  83   2              if(KeyPress & KEY5)  //如果KEY5按住，则滚轮下滚，即滚轮值为负。
  84   2              {
  85   3                  Buf[3]=-1;  //这里一次往下滚动一个单位。
  86   3              }
  87   2              if(KeyPress & KEY6)  //如果KEY6按住，则滚轮上滚，既滚轮值为正
  88   2              {
  89   3                  Buf[3]=1;   //这里一次往上滚动一个单位。
  90   3              }
  91   2              if(KeyPress & KEY7)  //鼠标左键
  92   2              {
  93   3                  Buf[0]|=0x01;  //D0为鼠标左键
  94   3              }
  95   2              if(KeyPress & KEY8)  //鼠标右键
  96   2              {
  97   3                  Buf[0]|=0x02;  //D1为鼠标右键
  98   3              }
  99   2              //报告准备好了，通过端点1返回，长度为4字节。
 100   2              D12WriteEndpointBuffer(USB_ENDPOINT1_IN, 4, Buf);
 101   2              Ep1InIsBusy=1;  //设置端点忙标志。
 102   2          }
 103   1          //记得清除KeyUp和KeyDown
 104   1          KeyUp=0;
 105   1          KeyDown=0;
 106   1      }
 107          ////////////////////////End of function//////////////////////////////
 108          
 109          /********************************************************************
 110          函数功能：主函数。
 111          入口参数：无。
 112          返    回：无。
 113          备    注：无。
 114          ********************************************************************/
 115          void main(void)  //主函数
 116          {
C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2022 15:52:45 PAGE 3   

 117   1              uint8 i;
 118   1              uint16 id;
 119   1              uint8 InterruptSource;
 120   1       
 121   1              EA = 1; //打开中断
 122   1              // 按键初始化之后 会在定时器0 中断处理时对按键进行周期扫描
 123   1              InitKeyboard(); //初始化按键 定时器 0 用于 按键扫描
 124   1              
 125   1              InitUART();  //初始化串口 定时器 1 用于 给串口提供周期脉冲
 126   1      
 127   1              for(i=0;i<18;i++)         //显示信息
 128   1              {
 129   2                      Prints(HeadTable[i]);
 130   2              }
 131   1      
 132   1              id = D12ReadID();
 133   1      
 134   1              Prints("Your D12 chip\'s ID is: ");
 135   1              PrintShortIntHex(id);
 136   1      
 137   1              if(id == 0x1012)
 138   1              {
 139   2                      Prints(". ID is correct! Congratulations!\r\n\r\n");
 140   2              }
 141   1              else
 142   1              {
 143   2                      Prints(". ID is incorrect! What a pity!\r\n\r\n");
 144   2              }
 145   1      
 146   1              UsbDisconnect();  //先断开USB连接
 147   1              UsbConnect();  //将USB连接上
 148   1              
 149   1              ConfigValue = 0; //配置值初始化为0
 150   1              
 151   1              while(1)  //死循环
 152   1              {
 153   2                      if(D12GetIntPin() == 0) //如果有中断发生
 154   2                      {
 155   3                              D12WriteCommand(READ_INTERRUPT_REGISTER);  //写读中断寄存器的命令
 156   3                              InterruptSource=D12ReadByte(); //读回第一字节的中断寄存器
 157   3                              
 158   3                              if(InterruptSource&0x80)
 159   3                                      UsbBusSuspend(); //总线挂起中断处理
 160   3                              
 161   3                              if(InterruptSource&0x40)
 162   3                                      UsbBusReset();   //总线复位中断处理
 163   3      
 164   3                              if(InterruptSource&0x01)
 165   3                                      UsbEp0Out();     //端点0输出中断处理
 166   3                              
 167   3                              if(InterruptSource&0x02)
 168   3                                      UsbEp0In();      //端点0输入中断处理
 169   3      
 170   3                              if(InterruptSource&0x04)
 171   3                                      UsbEp1Out();     //端点1输出中断处理
 172   3                              
 173   3                              if(InterruptSource&0x08)
 174   3                                      UsbEp1In();      //端点1输入中断处理
 175   3      
 176   3                              if(InterruptSource&0x10)
 177   3                                      UsbEp2Out();     //端点2输出中断处理
 178   3                              
C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2022 15:52:45 PAGE 4   

 179   3                              if(InterruptSource&0x20)
 180   3                                      UsbEp2In();      //端点2输入中断处理
 181   3                      }
 182   2                      
 183   2                      if(ConfigValue != 0) //如果已经设置为非0的配置，则可以返回报告数据
 184   2                      {
 185   3                              LEDs=~KeyPress;  //利用板上8个LED显示按键状态，按下时亮
 186   3                              if(!Ep1InIsBusy)  //如果端点1输入没有处于忙状态，则可以发送数据
 187   3                              {
 188   4                                      // 按键扫描 在 定时计数器 中断中进行 周期执行
 189   4                                      KeyCanChange = 0;  //禁止按键扫描 临界区
 190   4                                      if(KeyUp||KeyDown||KeyPress) //如果有按键事件发生
 191   4                                      {
 192   5                                              SendReport();  //则返回报告
 193   5                                      }
 194   4                                      KeyCanChange = 1;  //允许按键扫描
 195   4                              }
 196   3                      }
 197   2              }
 198   1      }
 199          ////////////////////////End of function//////////////////////////////
 200          
 201          
 202          
 203          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    364    ----
   CONSTANT SIZE    =   1434    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
