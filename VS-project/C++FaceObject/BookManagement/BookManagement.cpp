// BookManagement.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
// 使用C++面向对象实现控制台式的以文件（或数据库）作为载体的图书管理系统
/*
system("cls"); // 清屏,尽量不使用，会出现一些问题比如：控制台白屏，闪屏等
但是如果不使用清屏的话，也会产生一些问题比如遗留输出结果等
白屏原因在于在背景色为白色情况下进行了清屏所以尽量在设置背景色使用后将背景色还原。
只要在每次设置背景色后都把背景色取消了就行不用每次绘制时都加上前景色。
*/
/*
修改操作全部放在添加操作中进行。书籍的添加将判断是否存在或者判断是否为空，
初始化和保存的工作完全可以放在构造函数或者析构函数中或者主逻辑中完成完全没必要放在外面。
总的书库与个人书库相比少了一个状态，后者要处理书的状态。
书名，作者名，出版社名，类别均设置在二十个字符以内。
*/
/*
系统基本成型后要对代码做一些优化和规范，然后对系统的界面要做一些调整，对一些可以公用的部分代码及变量或绘制参数做一些全局化。
只有library和usergroup可以直接触碰基类的数据（因为要添加），其余都不允许直接触碰到基类的数据。
*/


#include "management.h"
#include <iostream>

// 返回与退出菜单。
bool into0 = true; 
bool into1 = true;
bool into2 = true;
bool into3 = true;

// 一些gui输出,以及文档注释的编写应该是有条理的有层次的应该遵循某种规范。
// 注释或文档写的毫无组织，相当乱，下次还得想个法子，使文档实现注释或者问题或者可能的bug能够表示的更加清晰。
int main()
{
	
	Management start;
	start.Run();

	system("pause");
	return 0;
}

